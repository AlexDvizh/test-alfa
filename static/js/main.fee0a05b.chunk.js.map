{"version":3,"sources":["store/types.js","store/actions.js","api/apiCards.js","components/Card/Card.js","components/CardList/CardList.js","components/Header/Header.js","components/Filter/Filter.js","components/App/App.js","store/reducers/cardListReducer.js","store/reducers/rootReducer.js","index.js"],"names":["CARDS_FETCHED","TOGGLE_LIKE_CARD","REMOVE_CARD","FILTER_BY_LIKED","fetchCards","dispatch","fetch","then","res","ok","json","Error","statusText","cards","type","payload","cardsFetched","Card","props","useDispatch","className","src","cardInfo","image","alt","name","isLiked","onClick","cardId","id","CardList","map","card","Header","Filter","isActive","checked","onChange","App","useSelector","state","cardList","filteredCards","useState","isFilterActive","toggleFilter","useEffect","filterByLiked","initialState","rootReducer","combineReducers","action","filterBy","filter","find","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fee0a05b.chunk.js","sourcesContent":["export const CARDS_FETCHED = 'CARDS_FETCHED';\r\nexport const TOGGLE_LIKE_CARD = 'TOGGLE_LIKE_CARD';\r\nexport const REMOVE_CARD = 'REMOVE_CARD';\r\nexport const FILTER_BY_LIKED = 'FILTER_BY_LIKED';","import { CARDS_FETCHED, TOGGLE_LIKE_CARD, REMOVE_CARD, FILTER_BY_LIKED } from './types';\r\nimport { getCards } from '../api/apiCards';\r\n\r\nexport function fetchCards() {\r\n    return function(dispatch) {\r\n        getCards().then(cards => {\r\n            dispatch(cardsFetched(cards));\r\n        });\r\n    }\r\n}\r\n\r\nexport function cardsFetched(cards) {\r\n    return {\r\n        type: CARDS_FETCHED,\r\n        payload: cards\r\n    };\r\n}\r\n\r\nexport function toggleLikeCard(cardId) {\r\n    return {\r\n        type: TOGGLE_LIKE_CARD,\r\n        payload: cardId\r\n    };\r\n}\r\n\r\nexport function removeCard(cardId) {\r\n    return {\r\n        type: REMOVE_CARD,\r\n        payload: cardId\r\n    };\r\n}\r\n\r\nexport function filterByLiked(isFilterActive) {\r\n    return {\r\n        type: FILTER_BY_LIKED,\r\n        payload: isFilterActive\r\n    };\r\n}","const URL = 'https://rickandmortyapi.com/api/character/1,2,3,4,5,6,7,8,9,10';\r\n\r\nexport const getCards = () => {\r\n    return fetch(URL).then(\r\n        (res) => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            } else {\r\n                throw new Error(res.statusText);\r\n            }\r\n        });\r\n}\r\n","import './Card.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeCard, toggleLikeCard } from '../../store/actions';\r\n\r\nfunction Card(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleRemoveCard = () => {\r\n    dispatch(removeCard(props.cardInfo.id));\r\n    };\r\n\r\n    const handleToggleLikeCard = () => {\r\n    dispatch(toggleLikeCard(props.cardInfo.id));\r\n    }\r\n\r\n    return (\r\n    <div className=\"card\">\r\n        <img className=\"card__img\" src={props.cardInfo.image} alt=\"Фото персонажа\"></img>\r\n        <div className=\"card__content\">\r\n            <p className=\"card__text\">{props.cardInfo.name}</p>\r\n            <div className=\"card__buttons-wrap\">\r\n            <button className={`card__button card__button_like ${props.cardInfo.isLiked ? 'card__button_like_active' : ''}`} onClick={handleToggleLikeCard}></button>\r\n            <button className=\"card__button card__button_delete\" onClick={handleRemoveCard}></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import Card from '../Card/Card';\r\nimport './CardList.css';\r\n\r\nfunction CardList(props) {\r\n\r\n    return (\r\n        <section className=\"card-list\">\r\n            <div className=\"card-list__wrap\">\r\n                {\r\n                props.cards.map(card => \r\n                    <Card \r\n                        key={card.id} \r\n                        cardInfo={card} \r\n                    />)\r\n                }\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default CardList;","import './Header.css';\r\n\r\nfunction Header() {\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1 className=\"header__title\">Rick and Morty</h1>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import './Filter.css';\r\n\r\nfunction Filter(props) {\r\n    const isActive = props.isActive;\r\n\r\n    const handleChange = (checked) => {\r\n        props.onChange(checked);\r\n    }\r\n\r\n    return (\r\n        <div className=\"filter\">\r\n            <input \r\n                className=\"filter__input\"\r\n                type=\"checkbox\" \r\n                checked={isActive} \r\n                onChange={() => { handleChange(!isActive); }} \r\n            />\r\n            <p className=\"filter__text\">{isActive ? \"Вернуть все карточки\" : \"Избранное\"}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filter;","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CardList from '../CardList/CardList';\r\nimport Header from '../Header/Header';\r\nimport './App.css';\r\nimport { fetchCards, filterByLiked } from '../../store/actions';\r\nimport Filter from '../Filter/Filter';\r\n\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch();\r\n    const cards = useSelector(state => state.cardList.cards);\r\n    const filteredCards = useSelector(state => state.cardList.filteredCards);\r\n\r\n    const [isFilterActive, toggleFilter] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCards());\r\n    }, [dispatch]);\r\n\r\n    const handleFilterChange = (isFilterActive) => {\r\n        toggleFilter(isFilterActive);\r\n        dispatch(filterByLiked(isFilterActive));\r\n    };\r\n\r\n\r\n    return (\r\n    <div className=\"app\">\r\n        <Header />\r\n        <Filter \r\n            isActive={isFilterActive} \r\n            onChange={handleFilterChange} \r\n        />\r\n        <CardList \r\n            cards={ isFilterActive ? filteredCards : cards } \r\n        />\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default App;","import { CARDS_FETCHED, REMOVE_CARD, TOGGLE_LIKE_CARD, FILTER_BY_LIKED } from '../types';\r\n\r\nconst initialState = {\r\n    cards: [],\r\n    filteredCards: []\r\n};\r\n\r\nexport const cardListReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CARDS_FETCHED:\r\n            return {\r\n                ...state,\r\n                cards: action.payload,\r\n                filteredCards: action.payload\r\n            }\r\n\r\n        case REMOVE_CARD:\r\n            const filterBy = card => card.id !== action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                cards: state.cards.filter(filterBy),\r\n                filteredCards: state.filteredCards.filter(filterBy)\r\n            }\r\n\r\n        case TOGGLE_LIKE_CARD:\r\n            const card = state.cards.find(card => card.id === action.payload);\r\n            card.isLiked = !card.isLiked;\r\n\r\n            return {\r\n                ...state,\r\n                cards: [...state.cards],\r\n                filteredCards: [...state.filteredCards]\r\n            };\r\n\r\n        case FILTER_BY_LIKED:\r\n            const isFilterActive = action.payload;\r\n            \r\n            return {\r\n                ...state,\r\n                filteredCards: isFilterActive ? state.cards.filter(card => card.isLiked) : [...state.cards]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport { cardListReducer } from \"./cardListReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    cardList: cardListReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/reducers/rootReducer';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}